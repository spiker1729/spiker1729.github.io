<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Birthday Fireworks</title>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            overflow: hidden;
            height: 100%;
            width: 100%;
            background: linear-gradient(45deg, #ff0066, #ffcc00, #00ccff, #ccff00, #ff6699, #66ff66);
            background-size: 600% 600%;
            animation: gradientAnimation 15s ease infinite;
            color: white;
            text-align: center;
            font-family: 'Poppins', sans-serif;
        }

        @keyframes gradientAnimation {
            0% { background-position: 0% 0%; }
            25% { background-position: 100% 0%; }
            50% { background-position: 100% 100%; }
            75% { background-position: 0% 100%; }
            100% { background-position: 0% 0%; }
        }

        #canvas-fireworks {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 0;
            pointer-events: none;
        }

        .content {
            position: relative;
            z-index: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            height: 100vh;
            justify-content: center;
            transition: color 0.5s ease;
        }

        h1 {
            font-size: 5rem;
            margin: 0;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        }

        p {
            font-size: 2rem;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
        }

        footer {
            position: absolute;
            bottom: 0;
            width: 100%;
            height: 20%;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            z-index: 1;
        }

        .animated-word {
            position: absolute;
            font-size: 4rem;
            font-weight: bold;
            color: white;
            opacity: 0;
            transition: transform 3s ease, opacity 3s ease;
            pointer-events: none;
        }

        .animated-word.appear {
            opacity: 1;
            transform: translateY(0);
        }

        @keyframes rise {
            0% { transform: translateY(100px); opacity: 1; }
            100% { transform: translateY(-100px); opacity: 0; }
        }

        .animated-word.rise {
            animation: rise 5s ease-in-out forwards;
        }

        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');
    </style>
</head>
<body>
    <canvas id="canvas-fireworks"></canvas>
    <div class="content">
        <h1 id="text-header">Happy Birthday!</h1>
        <p id="text-subtitle">Wishing you a day filled with joy and celebration!</p>
    </div>
    <footer id="footer">
        <!-- Footer content will be injected by JavaScript -->
    </footer>

    <script>
        // Function to calculate contrasting text color
        function getContrastingColor(bgColor) {
            const r = parseInt(bgColor.slice(1, 3), 16);
            const g = parseInt(bgColor.slice(3, 5), 16);
            const b = parseInt(bgColor.slice(5, 7), 16);
            const brightness = (0.2126 * r + 0.7152 * g + 0.0722 * b);
            return brightness > 128 ? '#000000' : '#FFFFFF';
        }

        // Canvas and context for fireworks
        const canvasFireworks = document.getElementById('canvas-fireworks');
        const ctxFireworks = canvasFireworks.getContext('2d');

        canvasFireworks.width = window.innerWidth;
        canvasFireworks.height = window.innerHeight;

        const fireworks = [];

        class Firework {
            constructor(x, y) {
                this.x = x;
                this.y = y;
                this.size = Math.random() * 5 + 2;
                this.life = Math.random() * 100 + 50;
                this.velocity = {
                    x: Math.random() * 4 - 2,
                    y: Math.random() * 4 - 2
                };
                this.color = `hsl(${Math.random() * 360}, 100%, 60%)`;
            }

            update() {
                this.x += this.velocity.x;
                this.y += this.velocity.y;
                this.life -= 1;
            }

            draw() {
                ctxFireworks.beginPath();
                ctxFireworks.arc(this.x, this.y, this.size, 0, Math.PI * 2);
                ctxFireworks.fillStyle = this.color;
                ctxFireworks.fill();
                ctxFireworks.closePath();
            }
        }

        function createFirework(x, y) {
            for (let i = 0; i < 150; i++) {
                fireworks.push(new Firework(x, y));
            }
        }

        function animateFireworks() {
            ctxFireworks.clearRect(0, 0, canvasFireworks.width, canvasFireworks.height);
            fireworks.forEach((firework, index) => {
                firework.update();
                firework.draw();
                if (firework.life <= 0) {
                    fireworks.splice(index, 1);
                }
            });
            requestAnimationFrame(animateFireworks);
        }

        canvasFireworks.addEventListener('click', (e) => {
            createFirework(e.clientX, e.clientY);
        });

        animateFireworks();

        setInterval(() => {
            createFirework(Math.random() * canvasFireworks.width, Math.random() * canvasFireworks.height);
        }, 1000);

        // Update text color based on background gradient
        function updateTextColor() {
            const colors = ['#ff0066', '#ffcc00', '#00ccff', '#ccff00', '#ff6699', '#66ff66'];
            const currentColor = colors[Math.floor(Math.random() * colors.length)];
            const textColor = getContrastingColor(currentColor);
            document.getElementById('text-header').style.color = textColor;
            document.getElementById('text-subtitle').style.color = textColor;
        }

        // Change text color periodically
        setInterval(updateTextColor, 1500);

        // Animated Words
        const words = ["HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","HAPPY BIRTHDAY","ðŸŽ‚","ðŸŽŠ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸŽ‚","ðŸŽŠ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ","ðŸ¥³","ðŸŽˆ"];

        const wordElements = [];

        function createWord(word, isFooter = false) {
            const span = document.createElement('span');
            span.className = 'animated-word';
            span.textContent = word;
            if (isFooter) {
                span.classList.add('rise');
            }
            document.body.appendChild(span);
            wordElements.push(span);

            const startX = Math.random() * window.innerWidth;
            const startY = isFooter ? window.innerHeight + 200 : -200;
            const endX = Math.random() * window.innerWidth;
            const endY = isFooter ? -200 : window.innerHeight + 200;

            span.style.left = `${startX}px`;
            span.style.top = `${startY}px`;
            span.style.transform = `translate(${startX}px, ${startY}px)`;

            setTimeout(() => {
                span.classList.add('appear');
                span.style.transform = `translate(${endX}px, ${endY}px)`;
            }, 100);

            setTimeout(() => {
                span.remove();
                wordElements.shift();
            }, 5000);
        }

        // Create animated words for the footer
        function createFooterWords() {
            setInterval(() => {
                createWord(words[Math.floor(Math.random() * words.length)], true);
            }, 1000); // New word every 1 second
        }

        // Create animated words for the main content
        setInterval(() => {
            createWord(words[Math.floor(Math.random() * words.length)]);
        }, 1000); // New word every 1 second

        // Initialize footer words
        createFooterWords();
    </script>
</body>
</html>
